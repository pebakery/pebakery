<!--
    Copyright (C) 2016-2023 Hajin Jang
    Licensed under GPL 3.0
 
    PEBakery is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
    
    Additional permission under GNU GPL version 3 section 7

    If you modify this program, or any covered work, by linking
    or combining it with external libraries, containing parts
    covered by the terms of various license, the licensors of
    this program grant you additional permission to convey the
    resulting work. An external library is a library which is
    not derived from or based on this program. 
-->

<!-- 
    Enable "Running Project Code" to see run designer properly.
    This is caused by cc:IconButton, which results in System.Runtime.Remoting.RemotingException.
-->
<!-- ReSharper disable Xaml.BindingWithContextNotResolved -->
<Window x:Name="Main"
        x:Class="PEBakery.WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PEBakery.WPF"
        xmlns:cc="clr-namespace:PEBakery.WPF.Controls"
        xmlns:ccc="clr-namespace:PEBakery.Core.WpfControls;assembly=PEBakery.Core"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:vm="clr-namespace:PEBakery.Core.ViewModels;assembly=PEBakery.Core"
        xmlns:s="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Icon="/Resources/Donut.ico"
        Closing="Window_Closing"
        Width="{Binding WindowWidth, Mode=TwoWay, FallbackValue=900}"
        Height="{Binding WindowHeight, Mode=TwoWay, FallbackValue=640}"
        MinWidth="600" MinHeight="480"
        Top="{Binding WindowTop, Mode=TwoWay, FallbackValue=25}"
        Left="{Binding WindowLeft, Mode=TwoWay, FallbackValue=25}"
        FontSize="{Binding GlobalFontSize, Mode=OneWay, FallbackValue=13}"
        FontFamily="Segoe UI"
        Title="{Binding TitleBar}"
        FocusManager.FocusedElement="{Binding RelativeSource={x:Static RelativeSource.Self}, Mode=OneTime}"
        WindowStartupLocation="Manual">
    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>
    <Window.CommandBindings>
        <!-- Main Buttons -->
        <CommandBinding Command="local:MainViewCommands.ProjectBuildStartCommand"
                        CanExecute="ProjectBuildStartCommand_CanExecute"
                        Executed="ProjectBuildStartCommand_Executed"/>
        <CommandBinding Command="local:MainViewCommands.ProjectBuildStopCommand"
                        CanExecute="ProjectBuildStopCommand_CanExecute"
                        Executed="ProjectBuildStopCommand_Executed"/>
        <CommandBinding Command="local:MainViewCommands.ProjectRefreshCommand"
                        CanExecute="ProjectLoading_CanExecute"
                        Executed="ProjectRefreshCommand_Executed"/>
        <CommandBinding Command="local:MainViewCommands.SettingWindowCommand"
                        CanExecute="ProjectLoading_CanExecute"
                        Executed="SettingWindowCommand_Executed"/>
        <CommandBinding Command="local:MainViewCommands.UtilityWindowCommand"
                        CanExecute="UtilityWindowCommand_CanExecute"
                        Executed="UtilityWindowCommand_Executed"/>
        <CommandBinding Command="local:MainViewCommands.LogWindowCommand"
                        CanExecute="LogWindowCommand_CanExecute"
                        Executed="LogWindowCommand_Executed"/>
        <CommandBinding Command="local:MainViewCommands.ProjectUpdateCommand"
                        CanExecute="ProjectUpdateCommand_CanExecute"
                        Executed="ProjectUpdateCommand_Executed"/>
        <CommandBinding Command="local:MainViewCommands.AboutWindowCommand"
                        CanExecute="AboutWindowCommand_CanExecute"
                        Executed="AboutWindowCommand_Executed"/>
        <!-- Script Buttons and Context Menus -->
        <CommandBinding Command="local:MainViewCommands.ScriptRunCommand"
                        CanExecute="ScriptCommand_CanExecute"
                        Executed="ScriptRunCommand_Executed"/>
        <CommandBinding Command="local:MainViewCommands.ScriptRefreshCommand"
                        CanExecute="ScriptCommand_CanExecute"
                        Executed="ScriptRefreshCommand_Executed"/>
        <CommandBinding Command="local:MainViewCommands.ScriptEditCommand"
                        CanExecute="ScriptCommand_CanExecute"
                        Executed="ScriptEditCommand_Executed"/>
        <CommandBinding Command="local:MainViewCommands.ScriptInternalEditorCommand"
                        CanExecute="ScriptCommand_CanExecute"
                        Executed="ScriptInternalEditorCommand_Executed"/>
        <CommandBinding Command="local:MainViewCommands.ScriptExternalEditorCommand"
                        CanExecute="ScriptCommand_CanExecute"
                        Executed="ScriptExternalEditorCommand_Executed"/>
        <CommandBinding Command="local:MainViewCommands.ScriptUpdateCommand"
                        CanExecute="ScriptUpdateCommand_CanExecute"
                        Executed="ScriptUpdateCommand_Executed"/>
        <CommandBinding Command="local:MainViewCommands.ScriptSyntaxCheckCommand"
                        CanExecute="ScriptCommand_CanExecute"
                        Executed="ScriptSyntaxCheckCommand_Executed"/>
        <CommandBinding Command="local:MainViewCommands.DirectoryExpandTreeCommand"
                        CanExecute="ScriptDirMainCommand_CanExecute"
                        Executed="DirectoryExpandTreeCommand_Executed"/>
        <CommandBinding Command="local:MainViewCommands.DirectoryCollapseTreeCommand"
                        CanExecute="ScriptDirMainCommand_CanExecute"
                        Executed="DirectoryCollapseTreeCommand_Executed"/>
        <CommandBinding Command="local:MainViewCommands.ScriptOpenFolderCommand"
                        CanExecute="ScriptCommand_CanExecute"
                        Executed="ScriptOpenFolderCommand_Executed"/>
        <CommandBinding Command="local:MainViewCommands.CreateScriptMetaFilesCommand"
                        CanExecute="ScriptCommand_CanExecute"
                        Executed="CreateScriptMetaFilesCommand_Executed"/>
    </Window.CommandBindings>
    <Window.Resources>
        <local:TaskBarProgressConverter x:Key="TaskBarProgressConverter" />
        <local:BuildConOutForegroundConverter x:Key="BuildConOutForegroundConverter"/>
        <local:SyntaxCheckerResultIconConverter x:Key="SyntaxCheckerResultIconConverter"/>
        <local:SyntaxCheckerResultColorConverter x:Key="SyntaxCheckerResultColorConverter"/>
        <local:ScriptLogoVisibilityConverter x:Key="ScriptLogoVisibilityConverter"/>
        <local:ScriptTitleConverter x:Key="ScriptTitleConverter" />
        <local:SelectedStateToVisibilityConverter x:Key="SelectedStateToVisibilityConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <local:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
        <local:ColorToSolidColorBrushConverter x:Key="ColorToSolidColorBrushConverter"/>
        <local:MultiColorToSolidColorBrushConverter x:Key="MultiColorToSolidColorBrushConverter"/>
        <local:IsTreeEntryDirMainToVisibilityConverter x:Key="IsTreeEntryDirMainToVisibilityConverter"/>
        <local:BooleanToParamConverter x:Key="BooleanToParamConverter"/>
        <local:GridLengthConverter x:Key="GridLengthConverter" />
        <local:MultiBooleanAndToVisibilityConverter x:Key="MultiBooleanAndToVisibilityConverter"/>
        <local:MultiBooleanOrToVisibilityConverter x:Key="MultiBooleanOrToVisibilityConverter"/>
    </Window.Resources>
    <DockPanel ccc:SelectTextOnFocus.Active="True">
        <Grid DockPanel.Dock="Top"
              Height="{Binding TopPanelHeight, Mode=OneWay, FallbackValue=80}" 
              Background="{Binding TopPanelBackground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=Black}"
              Visibility="{Binding NormalInterfaceVisibility}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0"
                        Orientation="Horizontal">
                <ContentControl Margin="12, 0, 5, 0"
                                VerticalAlignment="Center"
                                Width="{Binding BannerIconSize, Mode=OneWay, FallbackValue=48}"
                                Height="{Binding BannerIconSize, Mode=OneWay, FallbackValue=48}"
                                ContentTemplate="{StaticResource DonutLogo}"
                                Content="{Binding TopPanelForeground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=White}"/>
                <TextBlock Text="PEBakery"
                           Foreground="{Binding TopPanelForeground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=White}"
                           Margin="{Binding BannerMargin, Mode=OneWay, FallbackValue=0}"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           FontSize="{Binding BannerFontSize, Mode=OneWay, FallbackValue=40}" 
                           FontWeight="SemiBold"
                           FontStretch="Condensed"
                           FontStyle="Italic"/>
            </StackPanel>
            <cc:ProgressRing Grid.Column="1"
                             Margin="10, 0, 0, 0"
                             Width="{Binding BannerIconSize, Mode=OneWay, FallbackValue=48}"
                             Height="{Binding BannerIconSize, Mode=OneWay, FallbackValue=48}"
                             Foreground="{Binding TopPanelForeground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=Black}"
                             HorizontalAlignment="Left"
                             VerticalAlignment="Center"
                             IsActive="{Binding WorkInProgress}"/>
            <Grid Grid.Column="3">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="{Binding MainIconButtonSize, Mode=OneWay, FallbackValue=40}"/>
                    <RowDefinition Height="20"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="{Binding MainIconGridWidth, Mode=OneWay, FallbackValue=48}"/>
                    <ColumnDefinition Width="{Binding MainIconGridWidth, Mode=OneWay, FallbackValue=48}"/>
                    <ColumnDefinition Width="{Binding MainIconGridWidth, Mode=OneWay, FallbackValue=48}"/>
                    <ColumnDefinition Width="{Binding MainIconGridWidth, Mode=OneWay, FallbackValue=48}"/>
                    <ColumnDefinition Width="{Binding MainIconGridWidth, Mode=OneWay, FallbackValue=48}"/>
                    <ColumnDefinition Width="{Binding MainIconGridWidth, Mode=OneWay, FallbackValue=48}"/>
                    <ColumnDefinition Width="{Binding MainIconGridWidth, Mode=OneWay, FallbackValue=48}"/>
                </Grid.ColumnDefinitions>

                <cc:IconButton Grid.Row="1" Grid.Column="2" 
                               IconMargin="{Binding MainIconButtonMargin, Mode=OneWay, FallbackValue=8}"
                               IconForeground="{Binding TopPanelForeground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=Black}"
                               x:Name="ProjectBuildStartButton"
                               Style="{StaticResource IconButtonStyle}"
                               Command="local:MainViewCommands.ProjectBuildStartCommand"
                               IconMaterialKind="Play"
                               AutomationProperties.Name="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}"
                               ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}"/>
                <TextBlock Grid.Row="2" Grid.Column="2"
                           Text="Build"
                           Foreground="{Binding TopPanelForeground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=White}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"/>
                <cc:IconButton Grid.Row="1" Grid.Column="3"
                               IconMargin="{Binding MainIconButtonMargin, Mode=OneWay, FallbackValue=8}"
                               IconForeground="{Binding TopPanelForeground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=White}"
                               x:Name="ProjectRefreshButton"
                               Style="{StaticResource IconButtonStyle}"
                               Command="local:MainViewCommands.ProjectRefreshCommand"
                               IconMaterialKind="Refresh"
                               AutomationProperties.Name="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}"
                               ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}"/>
                <TextBlock Grid.Row="2" Grid.Column="3"
                           Text="Refresh"
                           Foreground="{Binding TopPanelForeground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=White}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"/>
                <cc:IconButton Grid.Row="1" Grid.Column="4"
                               IconMargin="{Binding MainIconButtonMargin, Mode=OneWay, FallbackValue=8}"
                               IconForeground="{Binding TopPanelForeground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=White}"
                               x:Name="SettingWindowButton"
                               Style="{StaticResource IconButtonStyle}"
                               Command="local:MainViewCommands.SettingWindowCommand"
                               IconMaterialKind="Cog"
                               AutomationProperties.Name="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}"
                               ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}"/>
                <TextBlock Grid.Row="2" Grid.Column="4"
                           Text="Settings"
                           Foreground="{Binding TopPanelForeground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=White}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"/>
                <cc:IconButton Grid.Row="1" Grid.Column="5"
                               IconMargin="{Binding MainIconButtonMargin, Mode=OneWay, FallbackValue=8}"
                               x:Name="LogWindowButton"
                               Style="{StaticResource IconButtonStyle}"
                               Command="local:MainViewCommands.LogWindowCommand"
                               IconMaterialKind="CommentCheck"
                               AutomationProperties.Name="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}"
                               ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}">
                    <cc:IconButton.IconForeground>
                        <MultiBinding Converter="{StaticResource MultiColorToSolidColorBrushConverter}" 
                                      Mode="OneWay" FallbackValue="White">
                            <MultiBinding.Bindings>
                                <Binding Path="BuildEndedWithIssue"/>
                                <Binding Path="TopPanelForeground"/>
                                <Binding Path="TopPanelIssueAlarmButtonColor"/>
                            </MultiBinding.Bindings>
                        </MultiBinding>
                    </cc:IconButton.IconForeground>
                </cc:IconButton>
                <Ellipse Grid.Row="1" Grid.Column="5"
                         Width="{Binding MainIssueAlarmBadgeDiameter}" Height="{Binding MainIssueAlarmBadgeDiameter}"
                         HorizontalAlignment="Right" VerticalAlignment="Top"
                         Margin="{Binding MainIssueAlarmBadgeMargin}"
                         Fill="{Binding TopPanelIssueAlarmBadgeColor, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=Red}">
                    <Ellipse.Visibility>
                        <MultiBinding Converter="{StaticResource MultiBooleanAndToVisibilityConverter}" 
                                      Mode="OneWay" FallbackValue="Hidden">
                            <MultiBinding.Bindings>
                                <Binding Path="SystemLogHasIssue"/>
                                <Binding Path="EnableSystemIssueAlarmBadge"/>
                            </MultiBinding.Bindings>
                        </MultiBinding>
                    </Ellipse.Visibility>
                </Ellipse>
                <TextBlock Grid.Row="2" Grid.Column="5"
                           Text="Logs"
                           Foreground="{Binding TopPanelForeground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=White}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"/>
                <cc:IconButton Grid.Row="1" Grid.Column="6"
                               IconMargin="{Binding MainIconButtonMargin, Mode=OneWay, FallbackValue=8}"
                               IconForeground="{Binding TopPanelForeground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=White}"
                               x:Name="UtilityWindowButton"
                               Style="{StaticResource IconButtonStyle}"
                               Command="local:MainViewCommands.UtilityWindowCommand"
                               IconMaterialKind="Layers"
                               AutomationProperties.Name="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}"
                               ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}"/>
                <TextBlock Grid.Row="2" Grid.Column="6"
                           Text="Utilities"
                           Foreground="{Binding TopPanelForeground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=White}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
                <cc:IconButton Grid.Row="1" Grid.Column="7"
                               IconMargin="{Binding MainIconButtonMargin, Mode=OneWay, FallbackValue=8}"
                               IconForeground="{Binding TopPanelForeground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=White}"
                               x:Name="ProjectUpdateButton"
                               Style="{StaticResource IconButtonStyle}"
                               Command="local:MainViewCommands.ProjectUpdateCommand"
                               IconMaterialKind="Download"
                               AutomationProperties.Name="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}"
                               ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}"/>
                <TextBlock Grid.Row="2" Grid.Column="7"
                           Text="Update"
                           Foreground="{Binding TopPanelForeground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=White}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"/>
                <cc:IconButton Grid.Row="1" Grid.Column="8"
                               IconMargin="{Binding MainIconButtonMargin, Mode=OneWay, FallbackValue=8}"
                               IconForeground="{Binding TopPanelForeground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=White}"
                               x:Name="AboutWindowButton"
                               Style="{StaticResource IconButtonStyle}"
                               Command="local:MainViewCommands.AboutWindowCommand"
                               IconMaterialKind="Help"
                               AutomationProperties.Name="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}"
                               ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}"/>
                <TextBlock Grid.Row="2" Grid.Column="8"
                           Text="About"
                           Foreground="{Binding TopPanelForeground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=White}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"/>
            </Grid>
        </Grid>
        <Grid DockPanel.Dock="Top"
              Height="{Binding TopPanelHeight, Mode=OneWay, FallbackValue=80}" 
              Background="{Binding TopPanelBackground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=Gray}"
              Visibility="{Binding BuildInterfaceVisibility}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0"
                        Orientation="Horizontal">
                <ContentControl Margin="12, 0, 5, 0"
                                VerticalAlignment="Center"
                                Width="{Binding BannerIconSize, Mode=OneWay, FallbackValue=48}"
                                Height="{Binding BannerIconSize, Mode=OneWay, FallbackValue=48}"
                                ContentTemplate="{StaticResource DonutLogo}"
                                Content="{Binding TopPanelForeground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=White}"/>
                <TextBlock Text="PEBakery"
                           Foreground="{Binding TopPanelForeground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=White}"
                           Margin="{Binding BannerMargin, Mode=OneWay, FallbackValue=0}"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           FontSize="{Binding BannerFontSize, Mode=OneWay, FallbackValue=40}" 
                           FontWeight="SemiBold"
                           FontStretch="Condensed"
                           FontStyle="Italic"/>
            </StackPanel>
            <cc:ProgressRing Grid.Column="1"
                             Margin="10, 0, 0, 0"
                             Width="{Binding BannerIconSize, Mode=OneWay, FallbackValue=48}"
                             Height="{Binding BannerIconSize, Mode=OneWay, FallbackValue=48}"
                             Foreground="{Binding TopPanelForeground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=Black}"
                             HorizontalAlignment="Left"
                             VerticalAlignment="Center"
                             IsActive="{Binding WorkInProgress}"/>
            <Grid Grid.Column="3">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="{Binding MainIconButtonSize, Mode=OneWay, FallbackValue=40}"/>
                    <RowDefinition Height="20"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="{Binding MainIconGridWidth, Mode=OneWay, FallbackValue=48}"/>
                    <ColumnDefinition Width="{Binding MainIconGridWidth, Mode=OneWay, FallbackValue=48}"/>
                    <ColumnDefinition Width="{Binding MainIconGridWidth, Mode=OneWay, FallbackValue=48}"/>
                </Grid.ColumnDefinitions>

                <cc:IconButton Grid.Row="1" Grid.Column="2"
                               IconMargin="{Binding MainIconButtonMargin, Mode=OneWay, FallbackValue=4}"
                               x:Name="ProjectBuildStopButton"
                               Style="{StaticResource IconButtonStyle}"
                               IconMaterialKind="StopCircle"
                               Command="local:MainViewCommands.ProjectBuildStopCommand"
                               AutomationProperties.Name="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}"
                               ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}">
                    <cc:IconButton.IconForeground>
                        <MultiBinding Converter="{StaticResource MultiColorToSolidColorBrushConverter}" 
                                      Mode="OneWay" FallbackValue="White">
                            <MultiBinding.Bindings>
                                <Binding Path="WaitingSubProcFinish"/>
                                <Binding Path="TopPanelForeground"/>
                                <Binding Path="TopPanelIssueAlarmButtonColor"/>
                            </MultiBinding.Bindings>
                        </MultiBinding>
                    </cc:IconButton.IconForeground>
                </cc:IconButton>
                <TextBlock Grid.Row="2" Grid.Column="2"
                           Foreground="{Binding TopPanelForeground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=White}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center">
                    <TextBlock.Text>
                        <Binding Path="WaitingSubProcFinish" Converter="{StaticResource BooleanToParamConverter}">
                            <Binding.ConverterParameter>
                                <x:Array Type="s:String">
                                    <s:String>Force</s:String>
                                    <s:String>Stop</s:String>
                                </x:Array>
                            </Binding.ConverterParameter>
                        </Binding>
                    </TextBlock.Text>
                </TextBlock>
                <cc:IconButton Grid.Row="1" Grid.Column="3"
                               IconMargin="{Binding MainIconButtonMargin, Mode=OneWay, FallbackValue=4}"
                               IconForeground="{Binding TopPanelForeground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=White}"
                               Style="{StaticResource IconButtonStyle}"
                               IconMaterialKind="CommentCheck"
                               Command="local:MainViewCommands.LogWindowCommand"
                               AutomationProperties.Name="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}"
                               ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}"/>
                <Ellipse Grid.Row="1" Grid.Column="3"
                         Width="{Binding MainIssueAlarmBadgeDiameter}" Height="{Binding MainIssueAlarmBadgeDiameter}"
                         HorizontalAlignment="Right" VerticalAlignment="Top"
                         Margin="{Binding MainIssueAlarmBadgeMargin}"
                         Fill="{Binding TopPanelIssueAlarmBadgeColor, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=Red}">
                    <Ellipse.Visibility>
                        <MultiBinding Converter="{StaticResource MultiBooleanAndToVisibilityConverter}" 
                                      Mode="OneWay" FallbackValue="Hidden">
                            <MultiBinding.Bindings>
                                <Binding Path="SystemLogHasIssue"/>
                                <Binding Path="EnableSystemIssueAlarmBadge"/>
                            </MultiBinding.Bindings>
                        </MultiBinding>
                    </Ellipse.Visibility>
                </Ellipse>
                <TextBlock Grid.Row="2" Grid.Column="3"
                           Text="Log" 
                           Foreground="{Binding TopPanelForeground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=White}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"/>
                <cc:IconButton Grid.Row="1" Grid.Column="4"
                               IconMargin="{Binding MainIconButtonMargin, Mode=OneWay, FallbackValue=4}"
                               IconForeground="{Binding TopPanelForeground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=White}"
                               Style="{StaticResource IconButtonStyle}"
                               IconMaterialKind="Help"
                               Command="local:MainViewCommands.AboutWindowCommand"
                               AutomationProperties.Name="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}"
                               ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}"/>
                <TextBlock Grid.Row="2" Grid.Column="4"
                           Text="About"
                           Foreground="{Binding TopPanelForeground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=White}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"/>
            </Grid>
        </Grid>
        <Grid DockPanel.Dock="Bottom"
              Height="20"
              x:Name="BottomDock"
              Panel.ZIndex="100">
            <ProgressBar IsIndeterminate="False"
                         Minimum="{Binding BottomProgressBarMinimum}"
                         Maximum="{Binding BottomProgressBarMaximum}"
                         Value="{Binding BottomProgressBarValue}"
                         Visibility="{Binding BottomProgressBarVisibility}"/>
            <TextBlock FontSize="13"
                       Text="{Binding StatusBarText}"
                       Background="{Binding StatusBarBackground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=LightGray}"
                       Foreground="{Binding StatusBarForeground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=Black}"
                       Visibility="{Binding BottomStatusBarVisibility}"/>

        </Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding MainTreeViewWidth, Mode=TwoWay, Converter={StaticResource GridLengthConverter}, FallbackValue=200}"
                                  MinWidth="100"
                                  MaxWidth="300"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0"
                  Margin="0, 0, 8, 0"
                  Visibility="{Binding NormalInterfaceVisibility}">
                <TreeView x:Name="MainTreeView"
                          Background="{Binding TreePanelBackground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=Gray}"
                          Foreground="{Binding TreePanelForeground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=Black}"
                          FontSize="{Binding ScriptTreeFontSize, Mode=OneWay, FallbackValue=12}"
                          ItemsSource="{Binding MainTreeItems}"
                          IsEnabled="{Binding EnableTreeItems}"
                          BorderThickness="0"
                          Loaded="MainTreeView_Loaded"
                          Unloaded="MainTreeView_Unloaded"
                          SelectedItemChanged="MainTreeView_SelectedItemChanged"
                          PreviewMouseRightButtonDown="MainTreeView_PreviewMouseRightButtonDown"
                          VirtualizingStackPanel.IsVirtualizing="True"
                          VirtualizingStackPanel.VirtualizationMode="Recycling">
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate DataType="vm:ProjectTreeItemModel"
                                                  ItemsSource="{Binding Children}">
                            <Grid Tag="{Binding Path=DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}">
                                <Grid.ContextMenu>
                                    <ContextMenu DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                        <!-- For File -->
                                        <cc:CorrectMenuItem Header="Run Script" 
                                                            Command="local:MainViewCommands.ScriptRunCommand"
                                                            Grid.IsSharedSizeScope="True"
                                                            Visibility="{Binding Path=IsTreeEntryFile, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <cc:CorrectMenuItem.Icon>
                                                <iconPacks:PackIconMaterial Kind="Play"/>
                                            </cc:CorrectMenuItem.Icon>
                                        </cc:CorrectMenuItem>
                                        <cc:CorrectMenuItem Header="Refresh Script" 
                                                            Command="local:MainViewCommands.ScriptRefreshCommand"
                                                            Grid.IsSharedSizeScope="True" 
                                                            Visibility="{Binding Path=IsTreeEntryFile, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <cc:CorrectMenuItem.Icon>
                                                <iconPacks:PackIconMaterial Kind="Refresh"/>
                                            </cc:CorrectMenuItem.Icon>
                                        </cc:CorrectMenuItem>
                                        <cc:CorrectMenuItem Header="Edit Script Properties" 
                                                            Command="local:MainViewCommands.ScriptInternalEditorCommand"
                                                            Grid.IsSharedSizeScope="True"
                                                            Visibility="{Binding Path=IsTreeEntryFile, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <cc:CorrectMenuItem.Icon>
                                                <iconPacks:PackIconMaterial Kind="Pencil"/>
                                            </cc:CorrectMenuItem.Icon>
                                        </cc:CorrectMenuItem>
                                        <cc:CorrectMenuItem Header="Edit Script Source" 
                                                            Command="local:MainViewCommands.ScriptExternalEditorCommand"
                                                            Grid.IsSharedSizeScope="True"
                                                            Visibility="{Binding Path=IsTreeEntryFile, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <cc:CorrectMenuItem.Icon>
                                                <iconPacks:PackIconMaterial Kind="Pencil"/>
                                            </cc:CorrectMenuItem.Icon>
                                        </cc:CorrectMenuItem>
                                        <cc:CorrectMenuItem Header="Syntax Check"
                                                            Command="local:MainViewCommands.ScriptSyntaxCheckCommand"
                                                            Grid.IsSharedSizeScope="True" 
                                                            Visibility="{Binding Path=IsTreeEntryFile, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <cc:CorrectMenuItem.Icon>
                                                <iconPacks:PackIconMaterial Kind="Magnify"/>
                                            </cc:CorrectMenuItem.Icon>
                                        </cc:CorrectMenuItem>
                                        <!-- For MainScript -->
                                        <Separator Visibility="{Binding Path=IsTreeEntryMain, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                        <!-- For Directory and MainScript -->
                                        <cc:CorrectMenuItem Header="Expand Items"
                                                            Command="local:MainViewCommands.DirectoryExpandTreeCommand"
                                                            Grid.IsSharedSizeScope="True">
                                            <cc:CorrectMenuItem.Visibility>
                                                <MultiBinding Converter="{StaticResource IsTreeEntryDirMainToVisibilityConverter}">
                                                    <Binding Path="IsTreeEntryFile" />
                                                    <Binding Path="IsTreeEntryMain" />
                                                </MultiBinding>
                                            </cc:CorrectMenuItem.Visibility>
                                            <cc:CorrectMenuItem.Icon>
                                                <iconPacks:PackIconMaterial Kind="ChevronDown"/>
                                            </cc:CorrectMenuItem.Icon>
                                        </cc:CorrectMenuItem>
                                        <cc:CorrectMenuItem Header="Collapse Items"
                                                            Command="local:MainViewCommands.DirectoryCollapseTreeCommand"
                                                            Grid.IsSharedSizeScope="True" >
                                            <cc:CorrectMenuItem.Visibility>
                                                <MultiBinding Converter="{StaticResource IsTreeEntryDirMainToVisibilityConverter}">
                                                    <Binding Path="IsTreeEntryFile"/>
                                                    <Binding Path="IsTreeEntryMain"/>
                                                </MultiBinding>
                                            </cc:CorrectMenuItem.Visibility>
                                            <cc:CorrectMenuItem.Icon>
                                                <iconPacks:PackIconMaterial Kind="ChevronRight"/>
                                            </cc:CorrectMenuItem.Icon>
                                        </cc:CorrectMenuItem>
                                        <!-- For updating script(s) -->
                                        <Separator />
                                        <cc:CorrectMenuItem Header="Update Script" 
                                                            Command="local:MainViewCommands.ScriptUpdateCommand"
                                                            Grid.IsSharedSizeScope="True" 
                                                            Visibility="{Binding Path=IsTreeEntryFile, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <cc:CorrectMenuItem.Icon>
                                                <iconPacks:PackIconMaterial Kind="Download"/>
                                            </cc:CorrectMenuItem.Icon>
                                        </cc:CorrectMenuItem>
                                        <cc:CorrectMenuItem Header="Update Child Scripts" 
                                                            Command="local:MainViewCommands.ScriptUpdateCommand"
                                                            Grid.IsSharedSizeScope="True" 
                                                            Visibility="{Binding Path=IsTreeEntryFile, Mode=OneWay, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                                            <cc:CorrectMenuItem.Icon>
                                                <iconPacks:PackIconMaterial Kind="Download"/>
                                            </cc:CorrectMenuItem.Icon>
                                        </cc:CorrectMenuItem>
                                        <cc:CorrectMenuItem Visibility="{Binding Path=EnableUpdateServerManagement, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                            Command="local:MainViewCommands.CreateScriptMetaFilesCommand"
                                                            Grid.IsSharedSizeScope="True" >
                                            <cc:CorrectMenuItem.Header>
                                                <Binding Path="IsTreeEntryFile" Converter="{StaticResource BooleanToParamConverter}">
                                                    <Binding.ConverterParameter>
                                                        <x:Array Type="s:String">
                                                            <s:String>Create Script Meta File</s:String>
                                                            <s:String>Create Script Meta Files</s:String>
                                                        </x:Array>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </cc:CorrectMenuItem.Header>
                                            <cc:CorrectMenuItem.Icon>
                                                <iconPacks:PackIconMaterial Kind="Paperclip"/>
                                            </cc:CorrectMenuItem.Icon>
                                        </cc:CorrectMenuItem>
                                        <!-- For File and Directory Both -->
                                        <Separator />
                                        <cc:CorrectMenuItem Command="local:MainViewCommands.ScriptOpenFolderCommand"
                                                            Grid.IsSharedSizeScope="True" >
                                            <cc:CorrectMenuItem.Header>
                                                <Binding Path="IsTreeEntryFile" Converter="{StaticResource BooleanToParamConverter}">
                                                    <Binding.ConverterParameter>
                                                        <x:Array Type="s:String">
                                                            <s:String>Open Script Folder</s:String>
                                                            <s:String>Open Folder</s:String>
                                                        </x:Array>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </cc:CorrectMenuItem.Header>
                                            <cc:CorrectMenuItem.Icon>
                                                <iconPacks:PackIconMaterial Kind="FolderOpen"/>
                                            </cc:CorrectMenuItem.Icon>
                                        </cc:CorrectMenuItem>
                                    </ContextMenu>
                                </Grid.ContextMenu>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="20"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="20"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <CheckBox Grid.Row="0" Grid.Column="0"
                                          VerticalAlignment="Center"
                                          Visibility="{Binding Script, Converter={StaticResource SelectedStateToVisibilityConverter}}"
                                          IsChecked="{Binding Checked, Mode=TwoWay}"
                                          Focusable="False"/>
                                <iconPacks:PackIconMaterial Grid.Row="0" Grid.Column="1"
                                                            VerticalAlignment="Center"
                                                            HorizontalAlignment="Center"
                                                            UseLayoutRounding="True"
                                                            Width="Auto"
                                                            Height="Auto"
                                                            Margin="2"
                                                            Kind="{Binding Icon}"/>
                                <TextBlock Grid.Row="0" Grid.Column="2"
                                           VerticalAlignment="Center"
                                           Margin="1, 0, 0, 0"
                                           Text="{Binding Script, Converter={StaticResource ScriptTitleConverter}}"/>
                            </Grid>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="TreeViewItem">
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded}"/>
                            <!-- <Setter Property="IsSelected" Value="{Binding Build, Mode=TwoWay}" /> -->
                            <Setter Property="Foreground" Value="{Binding Path=DataContext.TreePanelForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Converter={StaticResource ColorToSolidColorBrushConverter}, Mode=OneWay, FallbackValue=Black}"/>
                        </Style>
                    </TreeView.ItemContainerStyle>
                </TreeView>
            </Grid>
            <Grid Grid.Column="0"
                  Margin="0, 0, 8, 0"
                  Visibility="{Binding BuildInterfaceVisibility}">
                <TreeView Background="{Binding TreePanelBackground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=LightGray}"
                          Foreground="{Binding TreePanelForeground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=Black}"
                          ItemsSource="{Binding BuildTreeItems}"
                          FontSize="12"
                          BorderThickness="0"
                          VirtualizingStackPanel.IsVirtualizing="True"
                          VirtualizingStackPanel.VirtualizationMode="Recycling">
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate DataType="{x:Type vm:ProjectTreeItemModel}"
                                                  ItemsSource="{Binding Children}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="20"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <iconPacks:PackIconMaterial Grid.Row="0" Grid.Column="0"
                                                            VerticalAlignment="Center"
                                                            HorizontalAlignment="Center"
                                                            UseLayoutRounding="True"
                                                            Width="Auto"
                                                            Height="Auto"
                                                            Margin="2"
                                                            Kind="{Binding Icon}"/>
                                <TextBlock Grid.Row="0" Grid.Column="1"
                                           Margin="1, 0, 0, 0"
                                           VerticalAlignment="Center"
                                           FontWeight="{Binding BuildFontWeight}"
                                           Text="{Binding Script, Converter={StaticResource ScriptTitleConverter}}"/>
                            </Grid>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="TreeViewItem">
                            <Setter Property="Focusable" Value="False" />
                            <Setter Property="IsExpanded" Value="True" />
                            <Setter Property="cc:BringIntoViewBehavior.BringIntoView" Value="True"  />
                            <Setter Property="IsSelected" Value="{Binding Focus, Mode=OneWay}" />
                            <Setter Property="Foreground" Value="{Binding Path=DataContext.TreePanelForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Converter={StaticResource ColorToSolidColorBrushConverter}, Mode=OneWay, FallbackValue=Black}"/>
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="{Binding Path=DataContext.TreePanelHighlight, Converter={StaticResource ColorToSolidColorBrushConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Mode=OneWay, FallbackValue=Red}"/>
                                </Trigger>
                            </Style.Triggers>
                            <Style.Resources>
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent" />
                            </Style.Resources>
                        </Style>
                    </TreeView.ItemContainerStyle>
                </TreeView>
            </Grid>
            <GridSplitter Grid.Row="0" Grid.Column="0"
                          Width="8"
                          HorizontalAlignment="Right"
                          VerticalAlignment="Stretch"
                          ResizeBehavior="CurrentAndNext">
                <GridSplitter.Template>
                    <ControlTemplate TargetType="{x:Type GridSplitter}">
                        <Grid>
                            <Button Content="⁞" />
                            <Rectangle Fill="#00FFFFFF" />
                        </Grid>
                    </ControlTemplate>
                </GridSplitter.Template>
            </GridSplitter>
            <Grid Grid.Column="1"
                  Background="White">
                <Grid.RowDefinitions>
                    <RowDefinition Height="100"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0"
                      Background="{Binding ScriptPanelBackground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=LightGray}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <!-- ScriptLogo -->
                    <Image x:Name="ScriptLogoImage"
                           Grid.Row="0" Grid.Column="0"
                           Grid.RowSpan="4"
                           Margin="10"
                           Width="{Binding ScriptLogoImageWidth}"
                           Height="{Binding ScriptLogoImageHeight}"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           UseLayoutRounding="True"
                           Visibility="{Binding ScriptLogoImage, Converter={StaticResource ScriptLogoVisibilityConverter}}"
                           Source="{Binding ScriptLogoImage}"/>
                    <iconPacks:PackIconMaterial x:Name="ScriptLogoIcon"
                                                Grid.Row="0" Grid.Column="0"
                                                Grid.RowSpan="4"
                                                Width="60" Height="60"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"
                                                UseLayoutRounding="True"
                                                Visibility="{Binding ScriptLogoIcon, Converter={StaticResource ScriptLogoVisibilityConverter}}"
                                                Kind="{Binding ScriptLogoIcon}"/>
                    <Border x:Name="ScriptLogoSvg"
                            Grid.Row="0" Grid.Column="0"
                            Grid.RowSpan="4"
                            Width="{Binding ScriptLogoSvgWidth}"
                            Height="{Binding ScriptLogoSvgHeight}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            UseLayoutRounding="True"
                            Visibility="{Binding ScriptLogoSvg, Converter={StaticResource ScriptLogoVisibilityConverter}}"
                            Background="{Binding ScriptLogoSvg}"/>
                    <!-- Title & Description -->
                    <DockPanel Grid.Row="0" Grid.Column="1"
                               VerticalAlignment="Center">
                        <TextBlock DockPanel.Dock="Left"
                                   Name="ScriptTitle"
                                   Margin="0, 0, 0, -2"
                                   FontSize="16"
                                   FontStretch="SemiCondensed"
                                   Text="{Binding ScriptTitleText}" 
                                   Foreground="{Binding ScriptPanelForeground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=Black}"
                                   FontWeight="Bold" 
                                   VerticalAlignment="Bottom"
                                   TextWrapping="Wrap"/>
                        <cc:IconButton DockPanel.Dock="Left"
                                       IconMargin="0"
                                       Margin="4, 0, 0, 0"
                                       Width="16"
                                       Height="16"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Bottom"
                                       Command="local:MainViewCommands.ScriptSyntaxCheckCommand"
                                       IsEnabled="{Binding IsTreeEntryFile}"
                                       Visibility="{Binding ScriptCheckVisibility}"
                                       BorderThickness="0"
                                       Background="Transparent"
                                       IconForeground="{Binding ScriptCheckResult, Converter={StaticResource SyntaxCheckerResultColorConverter}}"
                                       IconMaterialKind="{Binding ScriptCheckResult, Converter={StaticResource SyntaxCheckerResultIconConverter}, FallbackValue=None}"
                                       ToolTip="Syntax Check"/>
                        <TextBlock DockPanel.Dock="Right"
                                   Margin="0, 0, 5, 0"
                                   Name="ScriptVersion"
                                   Text="{Binding ScriptVersionText}"
                                   Foreground="{Binding ScriptPanelForeground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=Black}"
                                   FontWeight="Bold"
                                   FontSize="14" 
                                   VerticalAlignment="Bottom"/>
                        <TextBlock DockPanel.Dock="Right"
                                   Name="ScriptAuthor"
                                   Text="{Binding ScriptAuthorText}" 
                                   Foreground="{Binding ScriptPanelForeground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=Black}"
                                   Margin="0, 0, 5, 0"
                                   FontSize="12"
                                   VerticalAlignment="Bottom"
                                   HorizontalAlignment="Right"
                                   FontStretch="Condensed"
                                   TextWrapping="Wrap" />
                    </DockPanel>
                    <TextBlock Grid.Row="1" Grid.Column="1"
                               Grid.RowSpan="3"
                               Margin="0, 0, 5, 0"
                               FontWeight="Medium"
                               Name="ScriptDescription"
                               Text="{Binding ScriptDescriptionText}"
                               Foreground="{Binding ScriptPanelForeground, Converter={StaticResource ColorToSolidColorBrushConverter}, FallbackValue=Black}"
                               FontStretch="SemiCondensed"
                               VerticalAlignment="Center"
                               TextWrapping="Wrap"/>
                    <!-- Script Buttons -->
                    <Button Grid.Row="0" Grid.Column="2"
                            Width="25"
                            x:Name="ScriptRunButton"
                            Visibility="{Binding NormalInterfaceVisibility}"
                            Command="local:MainViewCommands.ScriptRunCommand"
                            IsEnabled="{Binding IsTreeEntryFile}"
                            AutomationProperties.Name="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}"
                            ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}">
                        <iconPacks:PackIconMaterial Kind="Play" Width="Auto" Height="Auto" Margin="4"/>
                    </Button>
                    <Button Grid.Row="1" Grid.Column="2"
                            Width="25"
                            x:Name="ScriptRefreshButton"
                            Visibility="{Binding NormalInterfaceVisibility}"
                            Command="local:MainViewCommands.ScriptRefreshCommand"
                            IsEnabled="{Binding IsTreeEntryFile}"
                            AutomationProperties.Name="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}"
                            ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}">
                        <iconPacks:PackIconMaterial Kind="Refresh" Width="Auto" Height="Auto" Margin="4"/>
                    </Button>
                    <Button Grid.Row="2" Grid.Column="2"
                            Width="25"
                            x:Name="ScriptEditButton"
                            Visibility="{Binding NormalInterfaceVisibility}"
                            Command="local:MainViewCommands.ScriptEditCommand"
                            AutomationProperties.Name="{Binding OpenExternalButtonToolTip}"
                            ToolTip="{Binding OpenExternalButtonToolTip}">
                        <iconPacks:PackIconMaterial Kind="{Binding OpenExternalButtonIconKind}" Width="Auto" Height="Auto" Margin="4"/>
                        <Button.ContextMenu>
                            <ContextMenu>
                                <cc:CorrectMenuItem Header="Edit Script Properties"
                                                    ToolTip="Manage header, interface and attachments"
                                                    Command="local:MainViewCommands.ScriptInternalEditorCommand">
                                    <cc:CorrectMenuItem.Icon>
                                        <iconPacks:PackIconMaterial Kind="Pencil"/>
                                    </cc:CorrectMenuItem.Icon>
                                </cc:CorrectMenuItem>
                                <cc:CorrectMenuItem Header="Edit Script Source"
                                                    ToolTip="Edit script code"
                                                    Command="local:MainViewCommands.ScriptExternalEditorCommand">
                                    <cc:CorrectMenuItem.Icon>
                                        <iconPacks:PackIconMaterial Kind="Pencil"/>
                                    </cc:CorrectMenuItem.Icon>
                                </cc:CorrectMenuItem>
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>
                    <Button Grid.Row="3" Grid.Column="2"
                            Width="25"
                            x:Name="ScriptUpdateButton"
                            Visibility="{Binding NormalInterfaceVisibility}"
                            Command="local:MainViewCommands.ScriptUpdateCommand"
                            AutomationProperties.Name="{Binding ScriptUpdateButtonToolTip}"
                            ToolTip="{Binding ScriptUpdateButtonToolTip}">
                        <iconPacks:PackIconMaterial Kind="Download" Width="Auto" Height="Auto" Margin="4"/>
                    </Button>
                </Grid>

                <DockPanel Grid.Row="1"
                           Focusable="False"
                           HorizontalAlignment="Stretch"
                           Visibility="{Binding BuildInterfaceVisibility}">
                    <StackPanel DockPanel.Dock="Bottom"
                                Orientation="Vertical"
                                HorizontalAlignment="Stretch"
                                Visibility="{Binding BuildScriptFullProgressVisibility}"
                                Margin="20, 0, 20, 10">
                        <!-- Script Progress -->
                        <Grid Height="20" Margin="0, 0, 0, 5" 
                              Visibility="{Binding BuildScriptProgressVisibility}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" MinWidth="120"/>
                                <ColumnDefinition Width="100"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0"
                                       TextAlignment="Left"
                                       FontWeight="SemiBold"
                                       Text="Script Progress" />
                            <TextBlock Grid.Column="1"
                                       TextAlignment="Right"
                                       FontWeight="SemiBold"
                                       Text="{Binding BuildScriptProgressPercentStr, Mode=OneWay}" />
                        </Grid>
                        <ProgressBar Height="28"
                                     Margin="0, 0, 0, 10"
                                     Visibility="{Binding BuildScriptProgressVisibility}"
                                     Minimum="0"
                                     Maximum="{Binding BuildScriptProgressMax}"
                                     Value="{Binding BuildScriptProgressValue}" />
                        <!-- Full Progress -->
                        <Grid Height="20" Margin="0, 0, 0, 5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" MinWidth="120"/>
                                <ColumnDefinition Width="100"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0"
                                       TextAlignment="Left"
                                       FontWeight="SemiBold"
                                       Text="Full Progress" />
                            <TextBlock Grid.Column="1"
                                       TextAlignment="Right"
                                       FontWeight="SemiBold"
                                       Text="{Binding BuildFullProgressPercentStr, Mode=OneWay}" />
                        </Grid>
                        <ProgressBar Height="28"
                                     Margin="0, 0, 0, 10"
                                     Minimum="0"
                                     Maximum="{Binding BuildFullProgressMax}"
                                     Value="{Binding BuildFullProgressValue}" />
                    </StackPanel>

                    <Border DockPanel.Dock="Top"
                            BorderBrush="Gray"
                            BorderThickness="1"
                            Margin="20, 20, 20, 20">
                        <DockPanel>
                            <!-- Build Echo Message -->
                            <TextBlock DockPanel.Dock="Top"
                                       TextAlignment="Left"
                                       Margin="10, 10, 10, 0"
                                       TextWrapping="Wrap"
                                       FontWeight="SemiBold"
                                       Text="Message"/>
                            <TextBlock DockPanel.Dock="Top"
                                       VerticalAlignment="Top"
                                       TextAlignment="Left"
                                       Margin="10, 10, 10, 0"
                                       TextWrapping="Wrap"
                                       Text="{Binding BuildEchoMessage}"/>
                            <!-- ShellExecute Console Output -->
                            <TextBlock DockPanel.Dock="Top"
                                       TextAlignment="Left"
                                       Margin="10, 20, 10, 0"
                                       TextWrapping="Wrap"
                                       FontWeight="SemiBold"
                                       Visibility="{Binding BuildConOutRedirectVisibility}"
                                       Text="ShellExecute Console Output"/>
                            <ListBox DockPanel.Dock="Top"
                                     Margin="10, 10, 10, 10"
                                     x:Name="BuildConOutRedirectListBox"
                                     MinHeight="20"
                                     Visibility="{Binding BuildConOutRedirectVisibility}"
                                     VerticalAlignment="Top"
                                     VerticalContentAlignment="Stretch"
                                     FontSize="12"
                                     FontFamily="{Binding MonospacedFontFamily}"
                                     FontWeight="{Binding MonospacedFontWeight}"
                                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                                     ScrollViewer.CanContentScroll="True"
                                     ScrollViewer.ScrollChanged="BuildConOutRedirectListBox_ScrollChanged" 
                                     ItemsSource="{Binding BuildConOutRedirectTextLines}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock TextWrapping="Wrap"
                                                   Foreground="{Binding Item2, Converter={StaticResource BuildConOutForegroundConverter}}"
                                                   Text="{Binding Item1}"/>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                            <!-- Command ProgressBar -->
                            <TextBlock DockPanel.Dock="Top"
                                       TextAlignment="Left"
                                       Margin="10, 20, 10, 0"
                                       TextWrapping="Wrap"
                                       FontWeight="SemiBold"
                                       Visibility="{Binding BuildCommandProgressVisibility}"
                                       Text="{Binding BuildCommandProgressTitle}"/>
                            <ProgressBar DockPanel.Dock="Top"
                                         Margin="10, 7, 10, 0"
                                         Height="20"
                                         Visibility="{Binding BuildCommandProgressVisibility}"
                                         IsIndeterminate="{Binding BuildCommandProgressIndeterminate}"
                                         Minimum="0"
                                         Maximum="{Binding BuildCommandProgressMax}"
                                         Value="{Binding BuildCommandProgressValue}" />
                            <TextBlock DockPanel.Dock="Top"
                                       TextAlignment="Left"
                                       Margin="10, 3, 10, 0"
                                       TextWrapping="Wrap"
                                       Visibility="{Binding BuildCommandProgressVisibility}"
                                       Text="{Binding BuildCommandProgressText}"/>
                        </DockPanel>
                    </Border>
                </DockPanel>

                <ScrollViewer Grid.Row="1"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch"
                              HorizontalScrollBarVisibility="Auto"
                              VerticalScrollBarVisibility="Auto"
                              Focusable="False"
                              Visibility="{Binding NormalInterfaceVisibility}"
                              Content="{Binding MainCanvas}"/>
            </Grid>
        </Grid>
    </DockPanel>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo ProgressState="{Binding TaskBarProgressState}" >
            <TaskbarItemInfo.ProgressValue>
                <MultiBinding Converter="{StaticResource TaskBarProgressConverter}" >
                    <Binding Path="BuildFullProgressMax" />
                    <Binding Path="BuildFullProgressValue" />
                </MultiBinding>
            </TaskbarItemInfo.ProgressValue>
        </TaskbarItemInfo>
    </Window.TaskbarItemInfo>
</Window>
